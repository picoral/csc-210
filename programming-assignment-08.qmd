---
title: "Programming Assignment 08"
---


```{r}
#| eval: true
#| echo: false
#| message: false
#| warning: false
library(tidyverse)
library(readxl)
data <- read_excel("assessment-deadlines.xlsx")
```


Deadline: `r data %>% filter(Assignment == "PA8") %>%  select(Deadline)` -- Friday, 11:30pm

This assignment is part 1 of a 2-part assignment. In this assignment
you will write code to create a word search game. In the next assignment
you will write code for a user to play that game.

# Make word search game

In this assignment, your goal is to create a word search grid 
based on an input text file.

Example of input file:

```
20 20
amazing
zoo
house
mouse
croissant
coffee
milk
tea
scone
brownie
napkin
fugde
```

The first line of the file will always give you the dimensions of
the word search grid. The other lines will contain one word per line.

Here's an example output based on the input file given above (your output does not have to match this exactly, but all words need to be there):

```
X H N R C B V D P S R P X L O T L C X O 
K M I L K K Y B J T G L T P Y K F R N C 
Y G Q K T A M A Z I N G W U T B C J I A 
Q A M W P L P T O U R I V R P J U K G W 
H I J D X K B P O Y N A P K I N J D W I 
Y O B P B W G M V I Y M X Y U D G V A R 
N E W W R N R B L D F U D G E W J V E T 
J J S C O N E D J D O S U V A W X I H R 
A L A T W M I C R O I S S A N T D N C R 
W L B Q N Q X O X X T F K E B G R D C H 
M I L K I I D F G R E T W Y B K M W P U 
O P I C E F D F I P N F O Y T N T G D D 
T E A H U N C E H X H K K D U U P U S F 
E W D L Q S J E I R B C Y R V W Y W S Q 
R T I L G G R X A P G O M K W O B M M I 
E F J X L Y L J W Y G H O U S E K J Q B 
N O H E I C U X V B Y Q U J I L L Q A C 
Y G E C J Y L B J C Y K S Y N F G K T J 
M S Y I A N D Q G I A H E V G C W W A B 
B U O R T Y K E D X Y K A X K T I X T Q
```

* amazing is at 2 5
* zoo is at 2 8
* house is at 15 11
* mouse is at 14 12
* croissant is at 8 7
* coffee is at 8 7
* milk is at 10 0
* tea is at 12 0
* scone is at 7 2
* brownie is at 5 4
* napkin is at 4 10
* fudge is at 6 10

You are to write out an output file that has `ouput_` in front of the file
name. For example, if the input file is named `input.txt` the output file
should be named `output_input.txt`.

You are require to write a `WordSearch.java` class that has a main
method, and the first argument provided is the input file name.

# Decomposition

* Points will be taken off for copy, pasted, and edited code that
  should have been encapsulated in a method.

* **This program should use fewer than 10 .java files.**
  Each of these files should be (<200 lines).  Do NOT include
  PA10hardCodedDemo.java.

* Each method should be less than 30 lines.  This INCLUDES
  comments, but not the method header.  It is easier to read a 
  function if it can all fit on one screen.
  
# Code Clarity

* YOU should be able to read, understand, and explain your own code
  to someone else a couple days after you wrote it.
  
  * No magic numbers
  * No methods written to just get the test cases to work

* There needs to be a balance between no comments in the body of the
  methods and a comment for every line in the program.  Either extreme
  will result in points off.

* **The file header should include instructions on how someone would
  use this program.**  To use the program, one would need to know the
  input file format.  One would also need to know the command line arguments
  that should be passed to the program.

* Use meaningful variable names.  Loop iterators can
  be simple (i for integers, s for strings, n for numbers, etc.).

* The clearest code examples will be anonymously shown in class.

* The most obfuscated code examples will be anonymously shown in class
  with suggestions for improvement.
  
